!function(e){var n={};function r(t){if(n[t])return n[t].exports;var o=n[t]={i:t,l:!1,exports:{}};return e[t].call(o.exports,o,o.exports,r),o.l=!0,o.exports}r.m=e,r.c=n,r.d=function(e,n,t){r.o(e,n)||Object.defineProperty(e,n,{enumerable:!0,get:t})},r.r=function(e){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})},r.t=function(e,n){if(1&n&&(e=r(e)),8&n)return e;if(4&n&&"object"==typeof e&&e&&e.__esModule)return e;var t=Object.create(null);if(r.r(t),Object.defineProperty(t,"default",{enumerable:!0,value:e}),2&n&&"string"!=typeof e)for(var o in e)r.d(t,o,function(n){return e[n]}.bind(null,o));return t},r.n=function(e){var n=e&&e.__esModule?function(){return e.default}:function(){return e};return r.d(n,"a",n),n},r.o=function(e,n){return Object.prototype.hasOwnProperty.call(e,n)},r.p="",r(r.s=4)}([function(e,n,r){"use strict";e.exports=function(e){var n=[];return n.toString=function(){return this.map((function(n){var r=function(e,n){var r=e[1]||"",t=e[3];if(!t)return r;if(n&&"function"==typeof btoa){var o=(i=t,A=btoa(unescape(encodeURIComponent(JSON.stringify(i)))),c="sourceMappingURL=data:application/json;charset=utf-8;base64,".concat(A),"/*# ".concat(c," */")),a=t.sources.map((function(e){return"/*# sourceURL=".concat(t.sourceRoot||"").concat(e," */")}));return[r].concat(a).concat([o]).join("\n")}var i,A,c;return[r].join("\n")}(n,e);return n[2]?"@media ".concat(n[2]," {").concat(r,"}"):r})).join("")},n.i=function(e,r,t){"string"==typeof e&&(e=[[null,e,""]]);var o={};if(t)for(var a=0;a<this.length;a++){var i=this[a][0];null!=i&&(o[i]=!0)}for(var A=0;A<e.length;A++){var c=[].concat(e[A]);t&&o[c[0]]||(r&&(c[2]?c[2]="".concat(r," and ").concat(c[2]):c[2]=r),n.push(c))}},n}},function(e,n,r){var t=r(2),o=r(3);"string"==typeof(o=o.__esModule?o.default:o)&&(o=[[e.i,o,""]]);var a={insert:"head",singleton:!1};t(o,a);e.exports=o.locals||{}},function(e,n,r){"use strict";var t,o=function(){return void 0===t&&(t=Boolean(window&&document&&document.all&&!window.atob)),t},a=function(){var e={};return function(n){if(void 0===e[n]){var r=document.querySelector(n);if(window.HTMLIFrameElement&&r instanceof window.HTMLIFrameElement)try{r=r.contentDocument.head}catch(e){r=null}e[n]=r}return e[n]}}(),i=[];function A(e){for(var n=-1,r=0;r<i.length;r++)if(i[r].identifier===e){n=r;break}return n}function c(e,n){for(var r={},t=[],o=0;o<e.length;o++){var a=e[o],c=n.base?a[0]+n.base:a[0],s=r[c]||0,d="".concat(c," ").concat(s);r[c]=s+1;var l=A(d),u={css:a[1],media:a[2],sourceMap:a[3]};-1!==l?(i[l].references++,i[l].updater(u)):i.push({identifier:d,updater:p(u,n),references:1}),t.push(d)}return t}function s(e){var n=document.createElement("style"),t=e.attributes||{};if(void 0===t.nonce){var o=r.nc;o&&(t.nonce=o)}if(Object.keys(t).forEach((function(e){n.setAttribute(e,t[e])})),"function"==typeof e.insert)e.insert(n);else{var i=a(e.insert||"head");if(!i)throw new Error("Couldn't find a style target. This probably means that the value for the 'insert' parameter is invalid.");i.appendChild(n)}return n}var d,l=(d=[],function(e,n){return d[e]=n,d.filter(Boolean).join("\n")});function u(e,n,r,t){var o=r?"":t.media?"@media ".concat(t.media," {").concat(t.css,"}"):t.css;if(e.styleSheet)e.styleSheet.cssText=l(n,o);else{var a=document.createTextNode(o),i=e.childNodes;i[n]&&e.removeChild(i[n]),i.length?e.insertBefore(a,i[n]):e.appendChild(a)}}function f(e,n,r){var t=r.css,o=r.media,a=r.sourceMap;if(o?e.setAttribute("media",o):e.removeAttribute("media"),a&&btoa&&(t+="\n/*# sourceMappingURL=data:application/json;base64,".concat(btoa(unescape(encodeURIComponent(JSON.stringify(a))))," */")),e.styleSheet)e.styleSheet.cssText=t;else{for(;e.firstChild;)e.removeChild(e.firstChild);e.appendChild(document.createTextNode(t))}}var m=null,g=0;function p(e,n){var r,t,o;if(n.singleton){var a=g++;r=m||(m=s(n)),t=u.bind(null,r,a,!1),o=u.bind(null,r,a,!0)}else r=s(n),t=f.bind(null,r,n),o=function(){!function(e){if(null===e.parentNode)return!1;e.parentNode.removeChild(e)}(r)};return t(e),function(n){if(n){if(n.css===e.css&&n.media===e.media&&n.sourceMap===e.sourceMap)return;t(e=n)}else o()}}e.exports=function(e,n){(n=n||{}).singleton||"boolean"==typeof n.singleton||(n.singleton=o());var r=c(e=e||[],n);return function(e){if(e=e||[],"[object Array]"===Object.prototype.toString.call(e)){for(var t=0;t<r.length;t++){var o=A(r[t]);i[o].references--}for(var a=c(e,n),s=0;s<r.length;s++){var d=A(r[s]);0===i[d].references&&(i[d].updater(),i.splice(d,1))}r=a}}}},function(e,n,r){"use strict";r.r(n);var t=r(0),o=r.n(t)()(!0);o.push([e.i,'body{font-family:"Quicksand",sans-serif !important}.hidden{display:none}h1{padding-top:5vh;margin-bottom:5vh;text-align:center;font-weight:500;font-size:4rem;color:#9dbbf8;font-family:"Quicksand",sans-serif}h2{font-size:1.2rem}.buttons-game{margin:2vh auto;display:flex;justify-content:space-around}.button-custom{padding:1.5vh;width:25%;border-radius:8px;border:2px solid #9dbbf8a4;color:#6890e0;background-color:transparent;cursor:pointer}.button-custom:hover{color:#fff;border-color:#6890e0;background-color:#9dbbf8}.button-custom:focus{outline:none}.container{width:fit-content;height:fit-content;margin:auto}.board{width:fit-content;height:fit-content;margin:auto;padding:5vh;display:flex;align-items:center;flex-direction:column;border-radius:25px;background-color:#dfe9fd;color:#6890e0;box-shadow:6px 8px 14px 1px #9ca7b9ab}.game-status{margin-bottom:2vh;width:100%;display:flex;justify-content:space-between}.player-turn{margin-bottom:5vh}.cover-gameboard{position:absolute;z-index:2;width:380px;height:380px;display:flex;justify-content:center;align-items:center;background-color:rgba(59,93,145,.507)}.cover-gameboard p{text-align:center;font-size:1.3rem;line-height:1.8rem;color:#f7f7f7}.gameboard{display:grid;grid-template-columns:repeat(3, 1fr);grid-template-rows:repeat(3, 1fr);grid-gap:10px;background-image:linear-gradient(#9dbbf8, #b5c5da)}.gameboard .board-cell{height:120px;width:120px;background-color:#dfe9fd;cursor:pointer}.gameboard .board-cell:hover{background-color:#cad9f8}',"",{version:3,sources:["webpack://src/assets/stylesheets/style.scss"],names:[],mappings:"AAAA,KACE,6CAAA,CAGF,QACE,YAAA,CAGF,GACE,eAAA,CACA,iBAAA,CACA,iBAAA,CACA,eAAA,CACA,cAAA,CACA,aAAA,CACA,kCAAA,CAGF,GACE,gBAAA,CAGF,cACE,eAAA,CACA,YAAA,CACA,4BAAA,CAGF,eACE,aAAA,CACA,SAAA,CACA,iBAAA,CACA,0BAAA,CACA,aAAA,CACA,4BAAA,CACA,cAAA,CAEA,qBACE,UAAA,CACA,oBAAA,CACA,wBAAA,CAGF,qBACE,YAAA,CAIJ,WACE,iBAAA,CACA,kBAAA,CACA,WAAA,CAGF,OACE,iBAAA,CACA,kBAAA,CACA,WAAA,CACA,WAAA,CACA,YAAA,CACA,kBAAA,CACA,qBAAA,CACA,kBAAA,CACA,wBAAA,CACA,aAAA,CACA,qCAAA,CAGF,aACE,iBAAA,CACA,UAAA,CACA,YAAA,CACA,6BAAA,CAGF,aACE,iBAAA,CAGF,iBACE,iBAAA,CACA,SAAA,CACA,WAAA,CACA,YAAA,CACA,YAAA,CACA,sBAAA,CACA,kBAAA,CACA,qCAAA,CAEA,mBACE,iBAAA,CACA,gBAAA,CACA,kBAAA,CACA,aAAA,CAIJ,WACE,YAAA,CACA,oCAAA,CACA,iCAAA,CACA,aAAA,CACA,kDAAA,CAEA,uBACE,YAAA,CACA,WAAA,CACA,wBAAA,CACA,cAAA,CAEA,6BACE,wBAAA",sourcesContent:["body {\r\n  font-family: 'Quicksand', sans-serif !important;\r\n}\r\n\r\n.hidden {\r\n  display: none;\r\n}\r\n\r\nh1 {\r\n  padding-top: 5vh;\r\n  margin-bottom: 5vh;\r\n  text-align: center;\r\n  font-weight: 500;\r\n  font-size: 4rem;\r\n  color: #9dbbf8;\r\n  font-family: 'Quicksand', sans-serif;\r\n}\r\n\r\nh2 {\r\n  font-size: 1.2rem;\r\n}\r\n\r\n.buttons-game {\r\n  margin: 2vh auto;\r\n  display: flex;\r\n  justify-content: space-around;\r\n}\r\n\r\n.button-custom {\r\n  padding: 1.5vh;\r\n  width: 25%;\r\n  border-radius: 8px;\r\n  border: 2px solid #9dbbf8a4;\r\n  color: #6890e0;\r\n  background-color: transparent;\r\n  cursor: pointer;\r\n\r\n  &:hover {\r\n    color: #ffff;\r\n    border-color: #6890e0;\r\n    background-color: #9dbbf8;\r\n  }\r\n\r\n  &:focus {\r\n    outline: none;\r\n  }\r\n}\r\n\r\n.container {\r\n  width: fit-content;\r\n  height: fit-content;\r\n  margin: auto;\r\n}\r\n\r\n.board {\r\n  width: fit-content;\r\n  height: fit-content;\r\n  margin: auto;\r\n  padding: 5vh;\r\n  display: flex;\r\n  align-items: center;\r\n  flex-direction: column;\r\n  border-radius: 25px;\r\n  background-color: #dfe9fd;\r\n  color: #6890e0;\r\n  box-shadow: 6px 8px 14px 1px #9ca7b9ab;\r\n}\r\n\r\n.game-status {\r\n  margin-bottom: 2vh;\r\n  width: 100%;\r\n  display: flex;\r\n  justify-content: space-between;\r\n}\r\n\r\n.player-turn {\r\n  margin-bottom: 5vh;\r\n}\r\n\r\n.cover-gameboard {\r\n  position: absolute;\r\n  z-index: 2;\r\n  width: 380px;\r\n  height: 380px;\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  background-color: rgba(59, 93, 145, 0.507);\r\n\r\n  p {\r\n    text-align: center;\r\n    font-size: 1.3rem;\r\n    line-height: 1.8rem;\r\n    color: #f7f7f7;\r\n  }\r\n}\r\n\r\n.gameboard {\r\n  display: grid;\r\n  grid-template-columns: repeat(3, 1fr);\r\n  grid-template-rows: repeat(3, 1fr);\r\n  grid-gap: 10px;\r\n  background-image: linear-gradient(#9dbbf8, #b5c5da);\r\n\r\n  .board-cell {\r\n    height: 120px;\r\n    width: 120px;\r\n    background-color: #dfe9fd;\r\n    cursor: pointer;\r\n\r\n    &:hover {\r\n      background-color: #cad9f8;\r\n    }\r\n  }\r\n}\r\n"],sourceRoot:""}]),n.default=o},function(e,n,r){"use strict";r.r(n);r(1);const t=(()=>{let e=!0;const n=Array(2);return{changeTurn:()=>(e=!e,e),restartTurn:()=>(e=!0,e),endGame:e=>!e.some(e=>""===e),addPlayers(e,r){n[0]=e,n[1]=r},getPlayers:()=>n,getTurn:(n,r)=>e?n:r}})(),o=(()=>{const e=Array(9).fill(""),n={1:[0,3,6],2:[1,4,7],3:[2,5,8],4:[0,1,2],5:[3,4,5],6:[6,7,8],7:[0,4,8],8:[2,4,6]};return{changeBoard:(n,r)=>""===e[r]&&(e[r]=n,!0),displayBoard:()=>e,checkWinner(r,t){const o=Object.keys(n);for(let a=0;a<o.length;a+=1)if(n[a+1].every(n=>e[n]===t)){return r.find(e=>e.getPiece()===t)}return!1}}})(),a=(e,n,r=0)=>({getName:()=>e,getPiece:()=>n,getScore:()=>r,updateScore(){r+=1}});var i=r.p+"59de2c7b9c7283cef812a9089d10a822.png",A=r.p+"d67d9cf4d846fa89148e299e8678eb3f.png";const c=()=>{const e=o.displayBoard();e.fill("");const n=document.querySelectorAll(".board-cell");for(let r=0;r<e.length;r+=1)n[r].style.backgroundImage="none"},s=()=>{document.querySelectorAll(".values").forEach(e=>{e.value=""})},d=e=>{for(let n=0;n<2;n+=1)document.getElementsByClassName(`player${n+1}-body`)[0].innerHTML=e[n].getName(),document.getElementsByClassName(`player${n+1}-body`)[1].innerHTML=e[n].getScore()},l=e=>{const n=e.getTurn(...e.getPlayers());document.getElementsByClassName("player-turn-content")[0].innerHTML=n.getName()+" it's your turn"},u=e=>{const n=document.querySelectorAll(".board-cell");for(let r=0;r<e.length;r+=1)"x"===e[r]&&(n[r].style.backgroundImage=`url('${i}')`,n[r].style.backgroundRepeat="no-repeat",n[r].style.backgroundPosition="center"),"o"===e[r]&&(n[r].style.backgroundImage=`url('${A}')`,n[r].style.backgroundRepeat="no-repeat",n[r].style.backgroundPosition="center")};var f,m;document.getElementById("start-button").addEventListener("click",()=>{$(".add-players").modal("show")}),f=t,document.getElementById("restart-button").addEventListener("click",()=>{c(),f.restartTurn(),l(f)}),((e,n)=>{const r=document.querySelectorAll(".board-cell");for(let t=0;t<r.length;t+=1)r[t].addEventListener("click",r=>{const t=n.getPlayers(),o=n.getTurn(...t).getPiece();if(e.changeBoard(o,r.target.id)){u(e.displayBoard()),n.changeTurn(),l(n);const r=e.checkWinner(t,o),a=e.displayBoard().filter(e=>""===e).length;r?(document.getElementsByClassName("winner-content")[0].innerHTML=r.getName()+" has won!",$(".winner").modal("show"),c(),r.updateScore(),d(t),n.restartTurn(),l(n)):a||($(".end-game").modal("show"),c(),n.restartTurn(),l(n))}})})(o,t),document.getElementById("cancelBtn").addEventListener("click",()=>{s(),$(".mini.modal").modal("hide")}),m=t,document.getElementById("submitBtn").addEventListener("click",()=>{const e=document.getElementsByClassName("values");if(e[0].value.toLowerCase()===e[1].value.toLowerCase())e[1].setCustomValidity("The players' names must be different.");else if(e[1].setCustomValidity(""),e[0].checkValidity()&&e[1].checkValidity()){const e=[document.getElementById("player1-name").value,document.getElementById("player2-name").value],n=m.getPlayers(),r=a(e[0],"x"),t=a(e[1],"o");m.addPlayers(r,t),d(n),s(),$(".mini.modal").modal("hide"),document.getElementsByClassName("cover-gameboard")[0].style.visibility="hidden",l(m)}})}]);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,